/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    int len(ListNode* h){
        if(!h) return 0;
        return 1+len(h->next);
    }
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int lenA = len(headA);
        int lenB = len(headB);
        ListNode* tempA = headA;
        ListNode* tempB = headB;
        if(lenA>lenB)for(int i=0;i<lenA-lenB;i++)tempA = tempA->next;
        else if(lenB >lenA)for(int i=0;i<lenB-lenA;i++) tempB = tempB->next;
        else{}
        while(tempA && tempB){
            if(tempA== tempB){
                return tempA;
            }
            tempA = tempA->next;
            tempB = tempB->next;
        }
        return NULL;
    }
};
